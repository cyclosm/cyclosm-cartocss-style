name: CyclOSM
description: 'Cycle oriented CartoCSS style.'
attribution: Data Â© OpenStreetMap (and) contributors, ODbL
bounds: &world
  - -180
  - -85.05112877980659
  - 180
  - 85.05112877980659
center:
  - 0
  - 0
  - 4
format: png
interactivity: false
minzoom: 0
maxzoom: 20
srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"

# Various parts to be included later on
_parts:
  # Extents are used for tilemill, and dont actually make it to the generated XML
  extents: &extents
    extent: *world
    srs-name: "900913"
    srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"
  extents84: &extents84
    extent: *world
    srs-name: "WGS84"
    srs: "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
  osm2pgsql: &osm2pgsql
    type: "postgis"
    dbname: "osm"
    key_field: ""
    geometry_field: "way"
    extent: "-20037508,-20037508,20037508,20037508"

Stylesheet:
- palette.mss
- road-colors.mss
- fonts.mss
- base.mss
- aerialways.mss
- roads.mss
- amenities.mss
- labels.mss
- placenames.mss
- addressing.mss
- ferry-routes.mss
- power.mss
- admin.mss
- gpx.mss
- legend.mss

Layer:
- id: land-low
  <<: *extents
  Datasource:
    file: http://osmdata.openstreetmap.de/download/simplified-land-polygons-complete-3857.zip
    type: shape
  class: shp
  geometry: polygon
  properties:
    maxzoom: 9
- id: land-high
  <<: *extents
  Datasource:
    file: http://osmdata.openstreetmap.de/download/land-polygons-split-3857.zip
    type: shape
  class: shp
  geometry: polygon
  properties:
    minzoom: 10
- id: landuse_gen0
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          ST_Snaptogrid(way, !pixel_width! / 4) AS way,
          way_area AS area,
          COALESCE(
            CASE WHEN landuse IS NOT NULL THEN ('landuse_' || landuse) ELSE NULL END,
            CASE WHEN "natural" IS NOT NULL THEN ('natural_' || "natural") ELSE NULL END,
            CASE WHEN leisure IS NOT NULL THEN ('leisure_' || leisure) ELSE NULL END,
            CASE WHEN amenity IS NOT NULL THEN ('amenity' || amenity) ELSE NULL END,
            CASE WHEN highway IN ('pedestrian') THEN ('highway_' || highway) ELSE NULL END
          ) AS type
          FROM planet_osm_polygon
          WHERE (
            landuse IN ('cemetery', 'commercial', 'forest', 'grass', 'industrial', 'meadow', 'farmland', 'vineyard', 'orchard', 'religious', 'residential', 'retail', 'village_green')
            OR "natural" IN ('grassland', 'glacier', 'heath', 'scrub', 'wood', 'wetland', 'sand', 'beach', 'dune', 'bare_rock', 'shingle', 'scree')
            OR leisure IN ('common', 'golf_course', 'garden', 'park', 'pitch', 'sports_center', 'stadium', 'track')
            OR amenity IN ('college', 'hospital', 'parking', 'school', 'university')
            OR highway IN ('pedestrian')
          )
          AND way_area > 0.1*!pixel_width!::real*!pixel_height!::real
          AND way && !bbox!
          ORDER BY way_area DESC
      ) AS data
  geometry: polygon
  properties:
    minzoom: 4
    maxzoom: 9
- id: landuse_gen1
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          way_area AS area,
          COALESCE(
            CASE WHEN landuse IS NOT NULL THEN ('landuse_' || landuse) ELSE NULL END,
            CASE WHEN "natural" IS NOT NULL THEN ('natural_' || "natural") ELSE NULL END,
            CASE WHEN leisure IS NOT NULL THEN ('leisure_' || leisure) ELSE NULL END,
            CASE WHEN amenity IS NOT NULL THEN ('amenity' || amenity) ELSE NULL END,
            CASE WHEN highway IS NOT NULL THEN ('highway_' || highway) ELSE NULL END
          ) AS type
        FROM planet_osm_polygon
        WHERE (
          landuse IN ('allotments', 'brownfield', 'cemetery', 'commercial', 'construction', 'forest', 'grass', 'greenhouse_horticulture', 'industrial', 'landfill', 'meadow', 'farmland', 'vineyard', 'orchard', 'plant_nursery', 'quarry', 'religious', 'residential', 'retail', 'village_green')
          OR "natural" IN ('grassland', 'glacier', 'heath', 'scrub', 'wood', 'wetland', 'sand', 'beach', 'dune', 'bare_rock', 'shingle', 'scree')
          OR leisure IN ('common', 'golf_course', 'garden', 'park', 'pitch', 'sports_center', 'stadium', 'track')
          OR amenity IN ('college', 'grave_yard', 'hospital', 'parking', 'school', 'university')
          OR highway IN ('pedestrian')
        )
        AND way_area > 1*!pixel_width!::real*!pixel_height!::real
        ORDER BY way_area DESC
      ) AS data
  geometry: polygon
  properties:
    cache-features: true
    minzoom: 10
    maxzoom: 12
- id: landuse
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          way_area AS area,
          COALESCE(
            CASE WHEN landuse IS NOT NULL THEN ('landuse_' || landuse) ELSE NULL END,
            CASE WHEN leisure IS NOT NULL THEN ('leisure_' || leisure) ELSE NULL END,
            CASE WHEN "natural" IS NOT NULL THEN ('natural_' || "natural") ELSE NULL END,
            CASE WHEN highway IS NOT NULL THEN ('highway_' || highway) ELSE NULL END,
            CASE WHEN amenity IS NOT NULL THEN ('amenity_' || amenity) ELSE NULL END,
            CASE WHEN man_made IN ('works', 'wastewater_plant', 'water_works') THEN 'landuse_industrial' ELSE NULL END
          ) AS type
        FROM planet_osm_polygon
        WHERE landuse IN ('allotments', 'brownfield', 'cemetery', 'commercial', 'construction', 'forest', 'grass', 'greenhouse_horticulture', 'industrial', 'landfill', 'meadow', 'farmland', 'vineyard', 'orchard', 'plant_nursery', 'quarry', 'religious', 'residential', 'retail', 'village_green')
          OR leisure IN ('common', 'garden', 'golf_course', 'park', 'pitch', 'sports_centre', 'stadium', 'track')
          OR "natural" IN ('grassland', 'glacier', 'heath', 'scrub', 'wood', 'wetland', 'sand', 'beach', 'dune', 'bare_rock', 'shingle', 'scree')
          OR highway IN ('pedestrian')
          OR amenity IN ('college', 'grave_yard', 'hospital', 'parking', 'school', 'university')
          OR man_made IN ('works', 'wastewater_plant', 'water_works')
        ORDER BY way_area DESC
      ) AS data
  geometry: polygon
  properties:
    minzoom: 13
- id: landuse-overlay
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          COALESCE(CASE WHEN landuse = 'forest' THEN 'wood' ELSE NULL END, "natural", landuse) AS type,
          tags->'leaf_type' AS leaf_type,
          way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels
        FROM planet_osm_polygon
        WHERE
          ("natural" = 'wood' OR landuse = 'forest')
          AND building IS NULL
          AND way_area > 1*!pixel_width!::real*!pixel_height!::real
        ORDER BY way_area DESC
      ) AS data
  geometry: polygon
  properties:
    minzoom: 7
- id: hillshade
  <<: *extents84
  Datasource:
    type: gdal
    file: dem/shade.vrt
  geometry: raster
  properties:
    status: off
- id: buildings
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          building AS type
        FROM planet_osm_polygon
        WHERE building IS NOT NULL
          AND building != 'no'
          AND way_area > 1*!pixel_width!::real*!pixel_height!::real
          AND (tags->'location' IS NULL OR tags->'location' != 'underground')
        ORDER BY z_order ASC, way_area DESC
      ) AS data
  geometry: polygon
  properties:
    minzoom: 16
#- id: contours100
#  class: contours
#  <<: *extents
#  Datasource:
#    <<: *osm2pgsql
#    dbname: "contours"
#    table: |-
#      (
#        SELECT
#          way, ele
#        FROM planet_osm_line
#        WHERE ele IS NOT NULL AND ele % 100 = 0
#      ) AS data
#  geometry: line
#  properties:
#    minzoom: 11
#- id: contours50
#  class: contours
#  <<: *extents
#  Datasource:
#    <<: *osm2pgsql
#    dbname: "contours"
#    table: |-
#      (
#        SELECT
#          way, ele
#        FROM planet_osm_line
#        WHERE ele IS NOT NULL AND ele % 100 != 0 AND ele % 50 = 0
#      ) AS data
#  geometry: line
#  properties:
#    minzoom: 11
#- id: contours20
#  class: contours
#  <<: *extents
#  Datasource:
#    <<: *osm2pgsql
#    dbname: "contours"
#    table: |-
#      (
#        SELECT
#          way, ele
#        FROM planet_osm_line
#        WHERE ele IS NOT NULL AND ele % 100 != 0 AND ele % 20 = 0
#      ) AS data
#  geometry: line
#  properties:
#    minzoom: 12
#- id: contours10
#  class: contours
#  <<: *extents
#  Datasource:
#    <<: *osm2pgsql
#    dbname: "contours"
#    table: |-
#      (
#        SELECT
#          way, ele
#        FROM planet_osm_line
#        WHERE ele IS NOT NULL AND ele % 50 != 0 AND ele % 10 = 0
#      ) AS data
#  geometry: line
#  properties:
#    minzoom: 13
- id: waterway_low
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT ST_Snaptogrid(way, !pixel_width! / 4) AS way, waterway AS type
        FROM planet_osm_line
        WHERE
          waterway IN ('river', 'canal')
          AND (tunnel IS NULL OR tunnel NOT IN ('yes', 'culvert'))
          AND way && !bbox!
      ) AS data
  geometry: linestring
  properties:
    minzoom: 8
    maxzoom: 12
- id: waterway_med
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, waterway AS type
        FROM planet_osm_line
        WHERE
          waterway IN ('river', 'canal', 'stream')
          AND (tunnel IS NULL OR tunnel NOT IN ('yes', 'culvert'))
      ) AS data
  geometry: linestring
  properties:
    minzoom: 13
    maxzoom: 14
- id: waterway_high
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, waterway AS type
        FROM planet_osm_line
        WHERE
          waterway IN ('river', 'canal', 'stream', 'ditch', 'drain')
          AND (tunnel IS NULL OR tunnel NOT IN ('yes', 'culvert'))
      ) AS data
  geometry: linestring
  properties:
    minzoom: 15
- id: water_gen0
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          way_area AS area,
          CASE
            WHEN tags->'intermittent' IN ('yes') OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season') OR tags->'basin' IN ('detention', 'infiltration') THEN 'yes'
            ELSE 'no'
          END AS intermittent
        FROM planet_osm_polygon
        WHERE
          (
            "natural" IN ('water', 'pond')
            OR waterway IN ('basin', 'canal', 'mill_pond', 'pond', 'riverbank', 'stream')
            OR landuse in ('basin', 'reservoir')
          )
          AND way_area > 0.1*!pixel_width!::real*!pixel_height!::real
          AND (tunnel IS NULL OR tunnel NOT IN ('yes', 'culvert'))
      ) AS data
  geometry: polygon
  properties:
    minzoom: 4
    maxzoom: 9
- id: water_gen1
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          way_area AS area,
          CASE
            WHEN tags->'intermittent' IN ('yes') OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season') OR tags->'basin' IN ('detention', 'infiltration') THEN 'yes'
            ELSE 'no'
          END AS intermittent
        FROM planet_osm_polygon
        WHERE
          (
            "natural" IN ('water', 'pond')
            OR waterway IN ('basin', 'canal', 'mill_pond', 'pond', 'riverbank', 'stream')
            OR landuse in ('basin', 'reservoir')
          )
          AND way_area > 1*!pixel_width!::real*!pixel_height!::real
          AND (tunnel IS NULL OR tunnel NOT IN ('yes', 'culvert'))
      ) AS data
  geometry: polygon
  properties:
    minzoom: 10
    maxzoom: 12
- id: water
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
            way,
            way_area AS area,
            CASE
            WHEN tags->'intermittent' IN ('yes') OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season') OR tags->'basin' IN ('detention', 'infiltration') THEN 'yes'
              ELSE 'no'
            END AS intermittent
        FROM planet_osm_polygon
        WHERE
          (
            "natural" IN ('water', 'pond')
            OR waterway IN ('basin', 'canal', 'mill_pond', 'pond', 'riverbank', 'stream')
            OR landuse in ('basin', 'reservoir')
          )
          AND (tunnel IS NULL OR tunnel NOT IN ('yes', 'culvert'))
      ) AS data
  geometry: polygon
  properties:
    minzoom: 13
- id: piers-poly
  geometry: polygon
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way, man_made
        FROM planet_osm_polygon
        WHERE man_made IN ('pier', 'breakwater', 'groyne')
      ) AS piers_poly
  properties:
    minzoom: 12
- id: piers-line
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way, man_made
        FROM planet_osm_line
        WHERE man_made IN ('pier', 'breakwater', 'groyne')
      ) AS piers_line
  properties:
    minzoom: 12
- id: aeroway
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, aeroway AS type
        FROM planet_osm_line
        WHERE aeroway IN ('runway', 'taxiway')
      ) AS data
  geometry: linestring
  properties:
    minzoom: 11
- id: tunnel
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          COALESCE(
            CASE
              WHEN highway='raceway' THEN 'track'  -- render raceways as tracks
              WHEN highway='road' THEN 'residential'  -- render "road" as residential
              WHEN highway='trunk' THEN 'motorway'  -- trunk as motorway, check can_bicycle if cyclable
              WHEN highway='trunk_link' THEN 'motorway_link'  -- trunk as motorway
              WHEN highway='footway' AND (bicycle='yes' OR bicycle='designated') THEN 'path'
              WHEN highway='bridleway' AND (bicycle='yes' OR bicycle='designated') THEN 'path'
              WHEN highway!='bus_guideway' THEN highway
              ELSE NULL
            END,
            CASE
              WHEN railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram') THEN 'railway'
              ELSE NULL
            END
          ) AS type,
          access,
          layer,
          CASE
            WHEN tags->'maxspeed'~E'^\\d+$' THEN (tags->'maxspeed')::integer
            WHEN tags->'maxspeed'~E'^\\d+ mph$' THEN REPLACE(tags->'maxspeed', ' mph', '')::integer * 1.609344
            WHEN tags->'maxspeed'~E'^\\d+ knots$' THEN REPLACE(tags->'maxspeed', ' knots', '')::integer * 1.852
            WHEN tags->'maxspeed'='walk' THEN 5
            ELSE NULL
          END AS maxspeed_kmh,
          CASE
            WHEN (
              tags->'psv' != 'no' OR tags->'motorcar' != 'no' OR tags->'bus' != 'no'
              OR tags->'motor_vehicle' != 'no'
              OR tags->'vehicle' != 'no'
              ) THEN 'yes'
            WHEN tags->'psv' IS NULL AND tags->'motorcar' IS NULL AND tags->'bus' IS NULL AND tags->'motor_vehicle' IS NULL AND tags->'vehicle' IS NULL AND (access != 'no' OR access IS NULL) THEN 'yes'
            ELSE 'no'
          END AS motor_vehicle,
          CASE
            WHEN tags->'cyclestreet' IN ('yes') THEN 'yes'
            WHEN tags->'bicycle_road' IN ('yes') THEN 'yes'
            ELSE 'no'
          END AS cyclestreet,
          CASE
            WHEN oneway IN ('yes', '-1') THEN oneway
            ELSE 'no'
          END AS oneway,
          CASE
            WHEN tags->'cycleway:left' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:left' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:left' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway:both' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:both' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:both' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            ELSE NULL
          END AS cycleway_left_render,
          CASE
            WHEN tags->'cycleway:right' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:right' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:right' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway:both' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:both' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:both' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            ELSE NULL
          END AS cycleway_right_render,
          CASE
            WHEN tags->'cycleway:left:oneway' IS NOT NULL THEN tags->'cycleway:left:oneway'
            WHEN tags->'cycleway:left' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            WHEN tags->'cycleway' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            ELSE NULL
          END AS cycleway_left_oneway,
          CASE
            WHEN tags->'cycleway:right:oneway' IS NOT NULL THEN tags->'cycleway:right:oneway'
            WHEN tags->'cycleway:right' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            WHEN tags->'cycleway' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            ELSE NULL
          END AS cycleway_right_oneway,
          CASE
            WHEN bicycle IN ('no', 'dismount', 'private', 'use_sidepath') THEN 'no'
            WHEN bicycle IS NOT NULL THEN bicycle
            WHEN tags->'motorroad' IN ('yes') THEN 'no'
            WHEN highway IN ('motorway', 'motorway_link') THEN 'no'
            WHEN tags->'vehicle' IN ('no', 'private') THEN 'no'
            WHEN tags->'vehicle' IS NOT NULL THEN tags->'vehicle'
            WHEN access IN ('no', 'private') THEN 'no'
            WHEN access IS NOT NULL THEN access
            ELSE NULL
          END AS can_bicycle,
          CASE
            WHEN tags->'segregated' IN ('yes') THEN 'yes'
            ELSE 'no'
          END AS segregated,
          CASE
            WHEN tags->'oneway:bicycle' IN ('yes', '-1') THEN tags->'oneway:bicycle'
            ELSE 'no'
          END AS oneway_bicycle,
          COALESCE(
            tags->'ramp:bicycle',
            tags->'ramp:stroller',
            tags->'ramp:wheelchair',
            tags->'ramp:luggage'
          ) AS has_ramp,
          CASE
            -- From best tag to less precise quality surface tag (smoothness > track > surface).
            WHEN tags->'smoothness' IS NULL AND tracktype IS NULL AND surface IS NULL
              THEN 'unknown'
            WHEN tags->'smoothness' IN ('horrible', 'very_horrible', 'impassable')
              THEN 'mtb'
            WHEN tags->'smoothness' IN ('bad', 'very_bad')
              THEN 'cyclocross'
            WHEN tracktype IN ('grade4', 'grade5')
              THEN 'mtb'
            WHEN tracktype IN ('grade2', 'grade3')
              THEN 'cyclocross'
            WHEN surface IN ('pebblestone', 'dirt', 'earth', 'grass', 'grass_paver', 'gravel_turf', 'ground', 'mud', 'sand')
              THEN 'mtb'
            WHEN surface IN ('concrete:lanes', 'concrete:plates', 'gravel', 'sett', 'unhewn_cobblestone', 'cobblestone', 'wood', 'compacted', 'fine_gravel', 'woodchips')
              THEN 'cyclocross'
            WHEN surface IN ('paved', 'asphalt', 'concrete', 'paving_stones')
              THEN 'road'
            ELSE 'unknown'
          END AS surface_type,
          CASE
            WHEN highway='cycleway' OR (highway IN ('path', 'footway', 'pedestrian', 'bridleway') AND bicycle IN ('yes', 'designated')) THEN CASE WHEN layer~E'^\\d+$' THEN 100*layer::integer - 61 ELSE -61 END
            WHEN highway IN ('path', 'footway', 'pedestrian', 'bridleway') THEN CASE WHEN layer~E'^\\d+$' THEN 100*layer::integer - 62 ELSE -62 END
            ELSE z_order
          END AS z_order
        FROM planet_osm_line
        WHERE (tunnel NOT IN ('no') OR covered NOT IN ('no') OR tags->'indoor' NOT IN ('no'))
              AND (railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram') OR highway IS NOT NULL)
        ORDER BY z_order ASC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 11
- id: turning_circle_case
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way
        FROM planet_osm_point
        WHERE highway = 'turning_circle'
      ) AS data
  geometry: point
  properties:
    minzoom: 14
- id: roads_high
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          COALESCE(
            CASE
              WHEN highway='raceway' THEN 'track'  -- render raceways as tracks
              WHEN highway='road' THEN 'residential'  -- render "road" as residential
              WHEN highway='trunk' THEN 'motorway'  -- trunk as motorway, check can_bicycle if cyclable
              WHEN highway='trunk_link' THEN 'motorway_link'  -- trunk as motorway
              WHEN highway='footway' AND (bicycle='yes' OR bicycle='designated') THEN 'path'
              WHEN highway='bridleway' AND (bicycle='yes' OR bicycle='designated') THEN 'path'
              WHEN highway!='bus_guideway' THEN highway
              ELSE NULL
            END,
            CASE
              WHEN railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram') THEN 'railway'
              ELSE NULL
            END
          ) AS type,
          access,
          CASE
            WHEN tags->'maxspeed'~E'^\\d+$' THEN (tags->'maxspeed')::integer
            WHEN tags->'maxspeed'~E'^\\d+ mph$' THEN REPLACE(tags->'maxspeed', ' mph', '')::integer * 1.609344
            WHEN tags->'maxspeed'~E'^\\d+ knots$' THEN REPLACE(tags->'maxspeed', ' knots', '')::integer * 1.852
            WHEN tags->'maxspeed'='walk' THEN 5
            ELSE NULL
          END AS maxspeed_kmh,
          CASE
            WHEN (
              tags->'psv' != 'no' OR tags->'motorcar' != 'no' OR tags->'bus' != 'no'
              OR tags->'motor_vehicle' != 'no'
              OR tags->'vehicle' != 'no'
              ) THEN 'yes'
            WHEN tags->'psv' IS NULL AND tags->'motorcar' IS NULL AND tags->'bus' IS NULL AND tags->'motor_vehicle' IS NULL AND tags->'vehicle' IS NULL AND (access != 'no' OR access IS NULL) THEN 'yes'
            ELSE 'no'
          END AS motor_vehicle,
          CASE
            WHEN tags->'cyclestreet' IN ('yes') THEN 'yes'
            WHEN tags->'bicycle_road' IN ('yes') THEN 'yes'
            ELSE 'no'
          END AS cyclestreet,
          CASE
            WHEN oneway IN ('yes', '-1') THEN oneway
            ELSE 'no'
          END AS oneway,
          CASE
            WHEN tags->'cycleway:left' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:left' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:left' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway:both' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:both' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:both' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            ELSE NULL
          END AS cycleway_left_render,
          CASE
            WHEN tags->'cycleway:right' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:right' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:right' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway:both' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:both' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:both' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            ELSE NULL
          END AS cycleway_right_render,
          CASE
            WHEN tags->'cycleway:left:oneway' IS NOT NULL THEN tags->'cycleway:left:oneway'
            WHEN tags->'cycleway:left' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            WHEN tags->'cycleway' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            ELSE NULL
          END AS cycleway_left_oneway,
          CASE
            WHEN tags->'cycleway:right:oneway' IS NOT NULL THEN tags->'cycleway:right:oneway'
            WHEN tags->'cycleway:right' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            WHEN tags->'cycleway' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            ELSE NULL
          END AS cycleway_right_oneway,
          CASE
            WHEN bicycle IN ('no', 'dismount', 'private', 'use_sidepath') THEN 'no'
            WHEN bicycle IS NOT NULL THEN bicycle
            WHEN tags->'motorroad' IN ('yes') THEN 'no'
            WHEN highway IN ('motorway', 'motorway_link') THEN 'no'
            WHEN tags->'vehicle' IN ('no', 'private') THEN 'no'
            WHEN tags->'vehicle' IS NOT NULL THEN tags->'vehicle'
            WHEN access IN ('no', 'private') THEN 'no'
            WHEN access IS NOT NULL THEN access
            ELSE NULL
          END AS can_bicycle,
          CASE
            WHEN tags->'segregated' IN ('yes') THEN 'yes'
            ELSE 'no'
          END AS segregated,
          CASE
            WHEN tags->'oneway:bicycle' IN ('yes', '-1') THEN tags->'oneway:bicycle'
            ELSE 'no'
          END AS oneway_bicycle,
          COALESCE(
            tags->'ramp:bicycle',
            tags->'ramp:stroller',
            tags->'ramp:wheelchair',
            tags->'ramp:luggage'
          ) AS has_ramp,
          CASE
            -- From best tag to less precise quality surface tag (smoothness > track > surface).
            WHEN tags->'smoothness' IS NULL AND tracktype IS NULL AND surface IS NULL
              THEN 'unknown'
            WHEN tags->'smoothness' IN ('horrible', 'very_horrible', 'impassable')
              THEN 'mtb'
            WHEN tags->'smoothness' IN ('bad', 'very_bad')
              THEN 'cyclocross'
            WHEN tracktype IN ('grade4', 'grade5')
              THEN 'mtb'
            WHEN tracktype IN ('grade2', 'grade3')
              THEN 'cyclocross'
            WHEN surface IN ('pebblestone', 'dirt', 'earth', 'grass', 'grass_paver', 'gravel_turf', 'ground', 'mud', 'sand')
              THEN 'mtb'
            WHEN surface IN ('concrete:lanes', 'concrete:plates', 'gravel', 'sett', 'unhewn_cobblestone', 'cobblestone', 'wood', 'compacted', 'fine_gravel', 'woodchips')
              THEN 'cyclocross'
            WHEN surface IN ('paved', 'asphalt', 'concrete', 'paving_stones')
              THEN 'road'
            ELSE 'unknown'
          END AS surface_type,
          CASE
            WHEN tags->'mtb:scale'~E'^\\d+[+-]?$' THEN REPLACE(REPLACE(tags->'mtb:scale', '+', ''), '-', '')::integer
            ELSE NULL
          END AS mtb_scale,
          CASE
            WHEN tags->'mtb:scale:imba'~E'^\\d+$' THEN (tags->'mtb:scale:imba')::integer
            ELSE NULL
          END AS mtb_scale_imba,
          CASE
            WHEN highway='cycleway' OR (highway IN ('path', 'footway', 'pedestrian', 'bridleway') AND bicycle IN ('yes', 'designated')) THEN CASE WHEN layer~E'^\\d+$' THEN 100*layer::integer+39 ELSE 39 END
            WHEN highway IN ('path', 'footway', 'pedestrian', 'bridleway') THEN CASE WHEN layer~E'^\\d+$' THEN 100*layer::integer+38 ELSE 38 END
            ELSE z_order
          END AS z_order
        FROM planet_osm_line
        WHERE (highway IS NOT NULL OR railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram'))
          AND (tunnel IS NULL OR tunnel = 'no')
          AND (bridge IS NULL OR bridge = 'no')
          AND (covered IS NULL OR covered = 'no')
          AND (tags->'indoor' IS NULL OR tags->'indoor' = 'no')
        ORDER BY z_order
      ) AS data
  geometry: linestring
  properties:
    cache-features: true
    minzoom: 11
- id: roads_med
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          ST_Snaptogrid(way, !pixel_width! / 4) AS way,
          COALESCE(
            highway,
            CASE
              WHEN railway IN ('rail') THEN 'railway'
              ELSE 'other'
            END
          ) AS type,
          CASE
            WHEN bicycle IN ('no', 'dismount', 'private', 'use_sidepath') THEN 'no'
            WHEN bicycle IS NOT NULL THEN bicycle
            WHEN tags->'motorroad' IN ('yes') THEN 'no'
            WHEN highway NOT IN ('motorway', 'motorway_link') AND tags->'vehicle' IN ('no', 'private') THEN 'no'
            WHEN highway NOT IN ('motorway', 'motorway_link') AND tags->'vehicle' IS NOT NULL THEN tags->'vehicle'
            WHEN highway NOT IN ('motorway', 'motorway_link') AND access IN ('no', 'private') THEN 'no'
            WHEN highway NOT IN ('motorway', 'motorway_link') AND access IS NOT NULL THEN access
            ELSE NULL
          END AS can_bicycle
        FROM planet_osm_roads
        WHERE (railway IN ('rail')
            OR highway IN ('motorway', 'trunk', 'primary', 'secondary'))
          AND way && !bbox!
        ORDER BY CASE
          WHEN railway IS NOT NULL THEN 0
          WHEN highway IS NOT NULL THEN 1
        END DESC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 9
    maxzoom: 10
- id: roads_low
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
          SELECT
            ST_Snaptogrid(way, !pixel_width! / 4) AS way,
            COALESCE(
              highway,
              CASE
                WHEN railway IN ('rail') THEN 'railway'
                ELSE 'other'
              END
            ) AS type,
            bridge,
            tunnel,
            bicycle
          FROM planet_osm_roads
          WHERE (railway IN ('rail') OR highway IN ('motorway', 'trunk'))
            AND way && !bbox!
          ORDER BY CASE
            WHEN railway IS NOT NULL THEN 0
            WHEN highway IS NOT NULL THEN 1
          END DESC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 5
    maxzoom: 8
- id: turning_circle_fill
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way
        FROM planet_osm_point
        WHERE highway = 'turning_circle'
      ) AS data
  geometry: point
  properties:
    minzoom: 14
- id: aerialways
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          aerialway,
          name,
          CASE
            WHEN tags->'aerialway:bicycle' IN ('yes', 'summer') THEN 'yes'
            WHEN aerialway IN ('cablecar', 'gondola', 'mixed_lift') AND (tags->'aerialway:bicycle' IS NULL OR tags->'aerialway:bicycle' != 'no') THEN 'yes'
            ELSE 'no'
          END AS bicycle
        FROM planet_osm_line
        WHERE aerialway IS NOT NULL
      ) AS data
  properties:
    minzoom: 12
- id: bridge
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          COALESCE(
            CASE
              WHEN highway='raceway' THEN 'track'  -- render raceways as tracks
              WHEN highway='road' THEN 'residential'  -- render "road" as residential
              WHEN highway='trunk' THEN 'motorway'  -- trunk as motorway, check can_bicycle if cyclable
              WHEN highway='trunk_link' THEN 'motorway_link'  -- trunk as motorway
              WHEN highway='footway' AND (bicycle='yes' OR bicycle='designated') THEN 'path'
              WHEN highway='bridleway' AND (bicycle='yes' OR bicycle='designated') THEN 'path'
              WHEN highway!='bus_guideway' THEN highway
              ELSE NULL
            END,
            CASE
              WHEN railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram') THEN 'railway'
              ELSE NULL
            END
          ) AS type,
          access,
          layer,
          CASE
            WHEN tags->'maxspeed'~E'^\\d+$' THEN (tags->'maxspeed')::integer
            WHEN tags->'maxspeed'~E'^\\d+ mph$' THEN REPLACE(tags->'maxspeed', ' mph', '')::integer * 1.609344
            WHEN tags->'maxspeed'~E'^\\d+ knots$' THEN REPLACE(tags->'maxspeed', ' knots', '')::integer * 1.852
            WHEN tags->'maxspeed'='walk' THEN 5
            ELSE NULL
          END AS maxspeed_kmh,
          CASE
            WHEN (
              tags->'psv' != 'no' OR tags->'motorcar' != 'no' OR tags->'bus' != 'no'
              OR tags->'motor_vehicle' != 'no'
              OR tags->'vehicle' != 'no'
              ) THEN 'yes'
            WHEN tags->'psv' IS NULL AND tags->'motorcar' IS NULL AND tags->'bus' IS NULL AND tags->'motor_vehicle' IS NULL AND tags->'vehicle' IS NULL AND (access != 'no' OR access IS NULL) THEN 'yes'
            ELSE 'no'
          END AS motor_vehicle,
          CASE
            WHEN tags->'cyclestreet' IN ('yes') THEN 'yes'
            WHEN tags->'bicycle_road' IN ('yes') THEN 'yes'
            ELSE 'no'
          END AS cyclestreet,
          CASE
            WHEN oneway IN ('yes', '-1') THEN oneway
            ELSE 'no'
          END AS oneway,
          CASE
            WHEN tags->'cycleway:left' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:left' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:left' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway:both' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:both' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:both' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            ELSE NULL
          END AS cycleway_left_render,
          CASE
            WHEN tags->'cycleway:right' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:right' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:right' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway:both' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway:both' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway:both' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            WHEN tags->'cycleway' IN ('track', 'opposite_track') THEN 'track'
            WHEN tags->'cycleway' IN ('lane', 'opposite_lane') THEN 'lane'
            WHEN tags->'cycleway' IN ('share_busway', 'opposite_share_busway', 'shoulder', 'shared_lane') THEN 'busway'
            ELSE NULL
          END AS cycleway_right_render,
          CASE
            WHEN tags->'cycleway:left:oneway' IS NOT NULL THEN tags->'cycleway:left:oneway'
            WHEN tags->'cycleway:left' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            WHEN tags->'cycleway' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            ELSE NULL
          END AS cycleway_left_oneway,
          CASE
            WHEN tags->'cycleway:right:oneway' IS NOT NULL THEN tags->'cycleway:right:oneway'
            WHEN tags->'cycleway:right' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            WHEN tags->'cycleway' IN ('opposite_lane', 'opposite_track', 'opposite_share_busway') THEN '-1'
            ELSE NULL
          END AS cycleway_right_oneway,
          CASE
            WHEN bicycle IN ('no', 'dismount', 'private', 'use_sidepath') THEN 'no'
            WHEN bicycle IS NOT NULL THEN bicycle
            WHEN tags->'motorroad' IN ('yes') THEN 'no'
            WHEN highway IN ('motorway', 'motorway_link') THEN 'no'
            WHEN tags->'vehicle' IN ('no', 'private') THEN 'no'
            WHEN tags->'vehicle' IS NOT NULL THEN tags->'vehicle'
            WHEN access IN ('no', 'private') THEN 'no'
            WHEN access IS NOT NULL THEN access
            ELSE NULL
          END AS can_bicycle,
          CASE
            WHEN tags->'segregated' IN ('yes') THEN 'yes'
            ELSE 'no'
          END AS segregated,
          CASE
            WHEN tags->'oneway:bicycle' IN ('yes', '-1') THEN tags->'oneway:bicycle'
            ELSE 'no'
          END AS oneway_bicycle,
          COALESCE(
            tags->'ramp:bicycle',
            tags->'ramp:stroller',
            tags->'ramp:wheelchair',
            tags->'ramp:luggage'
          ) AS has_ramp,
          CASE
            -- From best tag to less precise quality surface tag (smoothness > track > surface).
            WHEN tags->'smoothness' IS NULL AND tracktype IS NULL AND surface IS NULL
              THEN 'unknown'
            WHEN tags->'smoothness' IN ('horrible', 'very_horrible', 'impassable')
              THEN 'mtb'
            WHEN tags->'smoothness' IN ('bad', 'very_bad')
              THEN 'cyclocross'
            WHEN tracktype IN ('grade4', 'grade5')
              THEN 'mtb'
            WHEN tracktype IN ('grade2', 'grade3')
              THEN 'cyclocross'
            WHEN surface IN ('pebblestone', 'dirt', 'earth', 'grass', 'grass_paver', 'gravel_turf', 'ground', 'mud', 'sand')
              THEN 'mtb'
            WHEN surface IN ('concrete:lanes', 'concrete:plates', 'gravel', 'sett', 'unhewn_cobblestone', 'cobblestone', 'wood', 'compacted', 'fine_gravel', 'woodchips')
              THEN 'cyclocross'
            WHEN surface IN ('paved', 'asphalt', 'concrete', 'paving_stones')
              THEN 'road'
            ELSE 'unknown'
          END AS surface_type,
          CASE
            WHEN highway='cycleway' OR (highway IN ('path', 'footway', 'pedestrian', 'bridleway') AND bicycle IN ('yes', 'designated')) THEN CASE WHEN layer~E'^\\d+$' THEN 100*layer::integer+139 ELSE 139 END
            WHEN highway IN ('path', 'footway', 'pedestrian', 'bridleway') THEN CASE WHEN layer~E'^\\d+$' THEN 100*layer::integer+138 ELSE 138 END
            ELSE z_order
          END AS z_order
        FROM planet_osm_line
        WHERE bridge NOT IN ('no') AND (railway IN ('light_rail', 'subway', 'narrow_gauge', 'rail', 'tram') OR highway IS NOT NULL)
        ORDER BY z_order ASC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 11
- id: admin-low-zoom
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          admin_level
        FROM planet_osm_roads
        WHERE boundary = 'administrative'
          AND admin_level IN ('0', '1', '2', '3', '4')
          AND osm_id < 0
        ORDER BY admin_level DESC
      ) AS admin_low_zoom
  properties:
    minzoom: 4
    maxzoom: 10
- id: admin-mid-zoom
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          admin_level
        FROM planet_osm_roads
        WHERE boundary = 'administrative'
          AND admin_level IN ('0', '1', '2', '3', '4', '5', '6', '7', '8')
          AND osm_id < 0
        ORDER BY admin_level DESC
      ) AS admin_mid_zoom
  properties:
    minzoom: 11
    maxzoom: 12
- id: admin-high-zoom
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          admin_level
        FROM planet_osm_roads
        WHERE boundary = 'administrative'
          AND admin_level IN ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')
          AND osm_id < 0
        ORDER BY admin_level::integer DESC -- With 10 as a valid value, we need to do a numeric ordering, not a text ordering
      ) AS admin_high_zoom
  properties:
    minzoom: 13
- id: bicycle_routes_gen0
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT ST_Simplify(way, !pixel_width!/4, TRUE) AS way, route, tags->'network' AS type, tags->'state' AS state
        FROM planet_osm_line
        WHERE (route='bicycle' OR route='mtb')
          AND tags->'network'='icn'
          AND way && !bbox!
        ORDER BY z_order
      ) AS data
  geometry: linestring
  properties:
    minzoom: 2
    maxzoom: 4
- id: bicycle_routes_gen1
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT ST_Simplify(way, !pixel_width!/4, TRUE) AS way, route, tags->'network' AS type, tags->'state' AS state
        FROM planet_osm_line
        WHERE (route='bicycle' OR route='mtb')
          AND tags->'network' IN ('icn', 'ncn')
          AND way && !bbox!
        ORDER BY CASE
          WHEN tags->'network' = 'icn' THEN 0
          WHEN tags->'network' = 'ncn' THEN 1
        END DESC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 5
    maxzoom: 7
- id: bicycle_routes_gen2
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT ST_Simplify(way, !pixel_width!/4, TRUE) AS way, route, tags->'network' AS type, tags->'state' AS state
        FROM planet_osm_line
        WHERE (route='bicycle' OR route='mtb')
          AND tags->'network' IN ('icn', 'ncn', 'rcn')
          AND (NOT ((tags->'network') IS NOT NULL AND (tags->'network:type') IS NOT NULL AND (tags->'network' = 'rcn') AND tags->'network:type' = 'node_network'))
          AND way && !bbox!
        ORDER BY CASE
          WHEN tags->'network' = 'icn' THEN 0
          WHEN tags->'network' = 'ncn' THEN 1
          WHEN tags->'network' = 'rcn' THEN 2
        END DESC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 8
    maxzoom: 10
- id: bicycle_routes_bicycle_gen3
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, route, COALESCE(tags->'network', 'lcn') AS type, tags->'state' AS state
        FROM planet_osm_line
        WHERE route='bicycle'
        ORDER BY CASE
          WHEN tags->'network' = 'icn' THEN 0
          WHEN tags->'network' = 'ncn' THEN 1
          WHEN tags->'network' = 'rcn' THEN 2
          WHEN tags->'network' = 'lcn' THEN 3
          ELSE 4
        END DESC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 11
- id: bicycle_routes_mtb_gen3
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, route, COALESCE(tags->'network', 'lcn') AS type, tags->'state' AS state
        FROM planet_osm_line
        WHERE route='mtb'
        ORDER BY CASE
          WHEN tags->'network' = 'icn' THEN 0
          WHEN tags->'network' = 'ncn' THEN 1
          WHEN tags->'network' = 'rcn' THEN 2
          WHEN tags->'network' = 'lcn' THEN 3
          ELSE 4
        END DESC
      ) AS data
  geometry: linestring
  properties:
    minzoom: 11
- id: ferry-routes
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way
        FROM planet_osm_line
        WHERE route = 'ferry'
          AND osm_id > 0
      ) AS ferry_routes
  properties:
    minzoom: 8
- id: route
  <<: *extents84
  Datasource:
    file: '${gpxroute}'
    type: ogr
    layer: tracks
  geometry: line
  properties:
    status: off
- id: power-minorline
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way
        FROM planet_osm_line
        WHERE power = 'minor_line'
      ) AS power_minorline
  properties:
    minzoom: 16
- id: power-line
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way
        FROM planet_osm_line
        WHERE power = 'line'
          OR (power = 'cable' AND tags->'location' IN ('overground', 'overhead', 'surface', 'outdoor', 'platform'))
      ) AS power_line
  properties:
    minzoom: 14
- id: protected-areas
  geometry: polygon
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          name,
          boundary,
          tags->'protect_class' AS protect_class,
          way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels
        FROM planet_osm_polygon
        WHERE (boundary IN ('aboriginal_lands', 'national_park')
                OR leisure = 'nature_reserve'
                OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99')))
          AND building IS NULL
          AND way_area > 1*!pixel_width!::real*!pixel_height!::real
      ) AS protected_areas
  properties:
    minzoom: 7
- id: trees
  geometry: polygon
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          "natural"
        FROM planet_osm_point
        WHERE "natural" = 'tree'
        UNION ALL
        SELECT
          way,
          "natural"
        FROM planet_osm_line
        WHERE "natural" = 'tree_row'
      ) AS data
  properties:
    cache-features: true
    minzoom: 16
- id: barriers_line
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way, COALESCE(historic, barrier) AS feature
        FROM
          (SELECT way,
            ('barrier_' || (CASE WHEN barrier IN ('chain', 'city_wall', 'ditch', 'fence', 'guard_rail',
                  'handrail', 'hedge', 'jersey_barrier', 'retaining_wall', 'wall') THEN barrier ELSE NULL END)) AS barrier,
            ('historic_' || (CASE WHEN historic = 'citywalls' THEN historic ELSE NULL END)) AS historic
            FROM
              (SELECT
                  way,
                  historic,
                  barrier,
                  waterway
                FROM planet_osm_polygon
                WHERE way && !bbox!
              UNION ALL
              SELECT
                  way,
                  historic,
                  barrier,
                  waterway
                FROM planet_osm_line
                WHERE way && !bbox!
              ) _
            WHERE barrier IN ('chain', 'city_wall', 'ditch', 'fence', 'guard_rail',
                'handrail', 'hedge', 'jersey_barrier', 'retaining_wall', 'wall')
            OR historic = 'citywalls'
            AND (waterway IS NULL OR waterway NOT IN ('river', 'canal', 'stream', 'drain', 'ditch'))
        ) AS features
      ) AS line_barriers
  properties:
    minzoom: 15
- id: cycle-junction-nodes
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          COALESCE(tags->'icn_ref', tags->'ncn_ref', tags->'rcn_ref', tags->'lcn_ref') AS ref,
          CASE
            WHEN (tags->'icn_ref') IS NOT NULL THEN 'icn'
            WHEN (tags->'ncn_ref') IS NOT NULL THEN 'ncn'
            WHEN (tags->'rcn_ref') IS NOT NULL THEN 'rcn'
            WHEN (tags->'lcn_ref') IS NOT NULL THEN 'lcn'
          END AS network
        FROM planet_osm_point
        WHERE
          (tags->'icn_ref') IS NOT NULL OR
          (tags->'ncn_ref') IS NOT NULL OR
          (tags->'rcn_ref') IS NOT NULL OR
          (tags->'lcn_ref') IS NOT NULL
        ORDER BY z_order NULLS LAST
      ) AS data
  geometry: point
  properties:
    minzoom: 13
- id: country-names
  class: country
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels,
          name
        FROM planet_osm_polygon
        WHERE boundary = 'administrative'
          AND admin_level = '2'
          AND name IS NOT NULL
          AND way_area > 100*!pixel_width!::real*!pixel_height!::real
        ORDER BY way_area DESC
      ) AS data
  properties:
    minzoom: 2
    maxzoom: 14
- id: capital-names
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          name,
          CASE
            WHEN (population ~ '^[0-9]{1,8}$') THEN population::INTEGER ELSE 0
          END as population,
          round(ascii(md5(osm_id::text)) / 55) AS dir -- base direction factor on geometry to be consistent across metatiles
        FROM planet_osm_point
        WHERE place IN ('city', 'town', 'village', 'hamlet')
          AND name IS NOT NULL
          AND capital='yes'
        ORDER BY population DESC
      ) AS data
  properties:
    minzoom: 3
    maxzoom: 15
- id: state-names
  class: state
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels,
          name,
          ref
        FROM planet_osm_polygon
        WHERE boundary = 'administrative'
          AND admin_level = '4'
          AND name IS NOT NULL
          AND way_area > 100*!pixel_width!::real*!pixel_height!::real
        ORDER BY way_area DESC
      ) AS data
  properties:
    minzoom: 4
    maxzoom: 10
- id: placenames-medium
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          name,
          score,
          CASE
            WHEN (place = 'city') THEN 1
            ELSE 2
          END as category,
          round(ascii(md5(osm_id::text)) / 55) AS dir -- base direction factor on geometry to be consistent across metatiles
        FROM
          (SELECT
              osm_id,
              way,
              place,
              name,
              (
                (CASE
                  WHEN (population ~ '^[0-9]{1,8}$') THEN population::INTEGER
                  WHEN (place = 'city') THEN 100000
                  WHEN (place = 'town') THEN 1000
                  ELSE 1
                END)
                *
                (CASE
                  WHEN (capital='4') THEN 2
                  ELSE 1
                END)
              ) AS score
            FROM planet_osm_point
            WHERE place IN ('city', 'town')
              AND name IS NOT NULL
              AND NOT (capital IS NOT NULL AND capital='yes')
          ) as p
        ORDER BY score DESC, length(name) DESC, name
      ) AS data
  properties:
    cache-features: true
    minzoom: 4
    maxzoom: 15
- id: placenames-small
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT *, ROW_NUMBER() OVER () AS row_number
        FROM (
          SELECT
            way,
            place,
            leisure,
            name,
            CASE
              WHEN (population ~ '^[0-9]{1,8}$') THEN population::INTEGER ELSE 0
            END as population
          FROM planet_osm_point
          WHERE way && !bbox! AND (
            place IN ('village', 'hamlet')
            AND name IS NOT NULL
            AND NOT (capital IS NOT NULL AND capital='yes')
            OR (place IN ('suburb', 'quarter', 'neighbourhood', 'locality', 'isolated_dwelling', 'farm')
                OR (place IN ('square')
                    AND (leisure is NULL OR NOT leisure IN ('park', 'common', 'recreation_ground', 'garden')))
            ) AND name IS NOT NULL
          )
          ORDER BY
            population DESC,
            CASE
              WHEN place = 'suburb' THEN 3
              WHEN place = 'village' THEN 4
              WHEN place = 'hamlet' THEN 5
              WHEN place = 'quarter' THEN 6
              WHEN place = 'neighbourhood' THEN 7
              WHEN place = 'locality' THEN 8
              WHEN place = 'isolated_dwelling' THEN 9
              WHEN place = 'farm' THEN 10
              WHEN place = 'square' THEN 11
            END ASC,
            length(name) DESC,
            name
        ) AS data2
      ) AS data
  properties:
    cache-features: true
    minzoom: 10
- id: cliffs
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, "natural", man_made
        FROM planet_osm_line
        WHERE "natural" = 'cliff' OR man_made = 'embankment'
      ) AS data
  geometry: linestring
  properties:
    cache-features: true
    minzoom: 13
- id: ferry-routes-text
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          name
        FROM planet_osm_line
        WHERE route = 'ferry'
          AND osm_id > 0
          AND name IS NOT NULL
      ) AS ferry_routes_text
  properties:
    minzoom: 13
- id: admin-text
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          name,
          admin_level,
          way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels
        FROM planet_osm_polygon
        WHERE boundary = 'administrative'
          AND admin_level IN ('1', '2', '3', '4', '5', '6', '7', '8', '9')
          AND name IS NOT NULL
          AND osm_id < 0
        ORDER BY admin_level::integer ASC, way_area DESC
      ) AS admin_text
  properties:
    minzoom: 13
- id: protected-areas-text
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          name,
          boundary,
          tags->'protect_class' AS protect_class,
          way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels
        FROM planet_osm_polygon
        WHERE (boundary IN ('aboriginal_lands', 'national_park')
               OR leisure = 'nature_reserve'
               OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99')))
          AND name IS NOT NULL
      ) AS protected_areas_text
  properties:
    minzoom: 13
- id: bicycle_routes_labels
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, route, tags->'network' AS type, ref, 1 as height, char_length(ref) AS width
        FROM planet_osm_line
        WHERE (route = 'bicycle' OR route = 'mtb')
          AND ref IS NOT NULL
          AND (NOT ((tags->'network') IS NOT NULL AND (tags->'network:type') IS NOT NULL AND (tags->'network' = 'rcn') AND tags->'network:type' = 'node_network'))
      ) AS data
  geometry: linestring
  properties:
    minzoom: 8
- id: train_stations
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, railway AS type, name, tags->'station' AS station, z_order
        FROM planet_osm_point
        WHERE railway = 'station' OR railway = 'halt'
        ORDER BY z_order NULLS LAST
      ) AS data
  geometry: point
  properties:
    minzoom: 12
- id: oriented-highway-amenities
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          osm_id,
          feature,
          ST_GeometryN(st_union(way),1) as way, max(angle)-min(angle) as angle_diff,
          avg(angle) as angle
        FROM (
          SELECT
            p.osm_id,
            p.way AS way,
            p.feature AS feature,
            CASE
              WHEN p.feature = 'crossing' THEN cast(90+degrees(ST_Azimuth(st_lineinterpolatepoint(way1,0),st_lineinterpolatepoint(way1,1))) AS integer) % 180
              WHEN p.feature = 'traffic_calming' THEN cast(90+degrees(ST_Azimuth(st_lineinterpolatepoint(way1,0),st_lineinterpolatepoint(way1,1))) AS integer) % 180
              WHEN p.feature = 'cycleway_asl' THEN
                CASE
                  WHEN p.direction = 'backward' THEN cast(degrees(ST_Azimuth(st_lineinterpolatepoint(way1,0),st_lineinterpolatepoint(way1,1))) AS integer) + 180
                  ELSE cast(degrees(ST_Azimuth(st_lineinterpolatepoint(way1,0),st_lineinterpolatepoint(way1,1))) AS integer)
                END
            END AS angle
          FROM (
            SELECT * FROM (
              SELECT
                p.osm_id,
                p.way,
                ST_LineMerge(ST_Intersection(st_buffer(p.way,0.1), h.way)) as way1,
                CASE
                  WHEN p.tags->'traffic_calming' IN ('yes', 'bump', 'dip', 'choker', 'cushion', 'hump', 'rumble_strip', 'table') THEN 'traffic_calming'
                  WHEN p.tags->'cycleway' = 'asl' THEN 'cycleway_asl'
                  WHEN p.highway = 'crossing' OR p.tags ? 'crossing' THEN 'crossing'
                END AS feature,
                p.tags->'direction' AS direction
              FROM planet_osm_point as p
              JOIN planet_osm_line h
                ON (st_intersects(p.way,h.way) and h.highway is not null and h.highway not in ('footway','cycleway','path','pedestrian','steps','service'))
              WHERE
                (
                  (
                    (p.highway='crossing' OR p.tags ? 'crossing')
                    AND p.bicycle IN ('yes', 'designated')
                  )
                  OR p.tags->'traffic_calming' IN ('yes', 'bump', 'dip', 'choker', 'cushion', 'hump', 'rumble_strip', 'table')
                  OR p.tags->'cycleway' = 'asl'
                )
                AND p.way && !bbox!
                AND h.way && !bbox!
            ) AS p
            WHERE ST_GeometryType(way1)='ST_LineString'
          ) AS p
        ) AS amenity
        GROUP BY osm_id, feature
      ) AS data
  properties:
    minzoom: 18
- id: amenities-poly
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    # Update the layer with the text below as well when editing this query.
    table: |-
      (
        SELECT
          access,
          bicycle,
          tags->'mtb' AS mtb,
          covered,
          tags->'shelter' AS shelter,
          way,
          name,
          COALESCE( -- order is important here
            'aeroway_' || CASE WHEN aeroway IN ('helipad', 'aerodrome') THEN aeroway ELSE NULL END,
            'tourism_' || CASE WHEN tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel', 'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery') THEN tourism ELSE NULL END,
            'amenity_' || CASE WHEN amenity IN ('atm', 'bank', 'bar', 'bench', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station', 'biergarten', 'cafe', 'car_wash', 'compressed_air', 'drinking_water', 'fast_food', 'ferry_terminal', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe', 'pharmacy', 'place_of_worship', 'police', 'post_office', 'post_box', 'pub', 'public_bath', 'restaurant', 'shelter', 'shower', 'toilets', 'water_point', 'cinema', 'theatre', 'bureau_de_change', 'casino', 'library', 'motorcycle_parking', 'charging_station', 'vending_machine') THEN amenity ELSE NULL END,
            'shop_' || CASE WHEN tags->'service:bicycle:retail'='yes' OR tags->'service:bicycle:repair'='yes' OR tags->'service:bicycle:rental'='yes' OR tags->'service:bicycle:pump'='yes' OR tags->'service:bicycle:diy'='yes' THEN 'bicycle' ELSE CASE WHEN shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry', 'sports') THEN shop ELSE NULL END END,
            'emergency_' || CASE WHEN tags->'emergency' IS NOT NULL then tags->'emergency' ELSE NULL END,
            'healthcare_' || CASE WHEN tags->'healthcare' IN ('clinic', 'hospital') THEN tags->'healthcare' ELSE NULL END,
            'leisure_' || CASE WHEN leisure='picnic_table' THEN leisure ELSE NULL END,
            'man_made_' || CASE WHEN man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo', 'water_tap', 'monitoring_station') THEN man_made ELSE NULL END,
            'natural_' || CASE WHEN "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance') THEN "natural" ELSE NULL END,
            'waterway_' || CASE WHEN waterway IN ('waterfall') THEN waterway ELSE NULL END,
            'historic_' || CASE WHEN historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate') THEN historic ELSE NULL END,
            'military_'|| CASE WHEN military IN ('bunker') THEN military ELSE NULL END,
            'highway_'|| CASE WHEN highway IN ('bus_stop', 'elevator', 'traffic_signals') THEN highway ELSE NULL END,
            'power_' || power
          ) AS feature,
          CASE
            WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
            ELSE NULL
          END AS capacity,
          religion,
          tags->'denomination' AS denomination,
          tags->'compressed_air' AS compressed_air,
          tags->'car_wash' as car_wash,
          tags->'drinking_water' AS drinking_water,
          tags->'location' AS location,
          tags->'memorial' AS memorial,
          tags->'castle_type' AS castle_type,
          tags->'information' AS information,
          tags->'artwork_type' as artwork_type,
          tags->'icao' as icao,
          tags->'iata' as iata,
          "generator:source",
          tags->'supervised' as supervised,
          tags->'bicycle_parking' as bicycle_parking,
          tags->'vending' as vending,
          tags->'automated' as automated,
          CASE
            WHEN "natural" IN ('peak', 'volcano', 'saddle') THEN NULL
            WHEN "waterway" IN ('waterfall') THEN
              CASE
                WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
              ELSE NULL
              END
            WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
            ELSE NULL
          END AS score,
          NULL AS elevation,
          CASE
            WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)) OR waterway IN ('waterfall') THEN
              CASE
                WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
              ELSE NULL
            END
            ELSE NULL
          END AS height,
          way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels
        FROM planet_osm_polygon
        WHERE aeroway IN ('helipad', 'aerodrome')
          OR tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel',
              'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery')
          OR amenity IN ('atm', 'bank', 'bar', 'bench', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station',
                         'biergarten', 'cafe', 'car_wash', 'compressed_air', 'drinking_water', 'fast_food',
                         'ferry_terminal', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe',
                         'pharmacy', 'place_of_worship', 'police', 'post_office', 'post_box', 'pub', 'public_bath',
                         'restaurant', 'shelter', 'shower', 'toilets', 'water_point', 'cinema', 'theatre',
                         'bureau_de_change', 'casino', 'library')
          OR tags->'compressed_air'='yes'
          OR tags->'car_wash'='yes'
          OR (amenity='motorcycle_parking' AND (bicycle='yes' OR bicycle='designated'))
          OR (amenity='charging_station' AND (bicycle='yes' OR bicycle='designated'))
          OR (amenity='vending_machine' AND tags->'vending'='bicycle_tube')
          OR tags->'healthcare' IN ('clinic', 'hospital')
          OR shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry', 'sports')
          OR leisure='picnic_table'
          OR (
            man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo')
            AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)
          )
          OR man_made IN ('water_tap')
          OR man_made IN ('monitoring_station') AND tags->'monitoring:bicycle'='yes'
          OR "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance')
          OR waterway IN ('waterfall')
          OR historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate')
          OR military IN ('bunker')
          OR tags->'emergency'='phone'
          OR highway IN ('elevator', 'traffic_signals')
          OR ((highway='bus_stop' OR public_transport='platform') AND (tags->'shelter'='yes' OR covered='yes'))
          OR (power = 'generator' AND "generator:source"='wind')
        ORDER BY
            CASE
                -- Bike amenities
                WHEN shop IN ('bicycle', 'sports') THEN 0
                WHEN amenity IN ('bicycle_rental') Then 10
                -- Emergency
                WHEN tags->'healthcare' IS NOT NULL OR tags->'emergency'='phone' OR amenity IN ('hospital', 'pharmacy') THEN 20
                -- Other emergency-related amenities
                WHEN amenity IN ('bicycle_repair_station', 'compressed_air', 'drinking_water', 'police', 'toilets',
                  'water_point', 'charging_station') THEN 21
                WHEN tags->'compressed_air'='yes' THEN 22
                --- Parkings
                WHEN amenity IN ('bicycle_parking', 'motorcycle_parking') THEN 32
                -- Supermarkets
                WHEN shop='supermarket' THEN 40
                -- Convenience
                WHEN shop='convenience' OR shop='convenience;gas' THEN 50
                -- Food
                WHEN shop IS NOT NULL OR amenity IN ('bar', 'biergarten', 'cafe', 'fast_food', 'food_court', 'pub', 'restaurant') THEN 60
                -- Everything else
                ELSE NULL
            END ASC NULLS LAST,
            feature,
            score DESC NULLS LAST
      ) AS data
  geometry: polygon
  properties:
    minzoom: 10
- id: amenities-points
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    # Update the layer with the text below as well when editing this query.
    table: |-
      (
        SELECT
          access,
          bicycle,
          tags->'mtb' AS mtb,
          covered,
          tags->'shelter' AS shelter,
          way,
          name,
          COALESCE( -- order is important here
            'aeroway_' || CASE WHEN aeroway IN ('helipad', 'aerodrome') THEN aeroway ELSE NULL END,
            'tourism_' || CASE WHEN tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel', 'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery') THEN tourism ELSE NULL END,
            'amenity_' || CASE WHEN amenity IN ('atm', 'bank', 'bar', 'bench', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station', 'biergarten', 'cafe', 'car_wash', 'compressed_air', 'drinking_water', 'fast_food', 'ferry_terminal', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe', 'pharmacy', 'place_of_worship', 'police', 'post_office', 'post_box', 'pub', 'public_bath', 'restaurant', 'shelter', 'shower', 'toilets', 'water_point', 'cinema', 'theatre', 'bureau_de_change', 'casino', 'library', 'motorcycle_parking', 'charging_station', 'vending_machine') THEN amenity ELSE NULL END,
            'shop_' || CASE WHEN tags->'service:bicycle:retail'='yes' OR tags->'service:bicycle:repair'='yes' OR tags->'service:bicycle:rental'='yes' OR tags->'service:bicycle:pump'='yes' OR tags->'service:bicycle:diy'='yes' THEN 'bicycle' ELSE CASE WHEN shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry', 'sports') THEN shop ELSE NULL END END,
            'emergency_' || CASE WHEN tags->'emergency' IS NOT NULL then tags->'emergency' ELSE NULL END,
            'healthcare_' || CASE WHEN tags->'healthcare' IN ('clinic', 'hospital') THEN tags->'healthcare' ELSE NULL END,
            'leisure_' || CASE WHEN leisure='picnic_table' THEN leisure ELSE NULL END,
            'man_made_' || CASE WHEN man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo', 'water_tap', 'monitoring_station') THEN man_made ELSE NULL END,
            'natural_' || CASE WHEN "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance') THEN "natural" ELSE NULL END,
            'waterway_' || CASE WHEN waterway IN ('waterfall') THEN waterway ELSE NULL END,
            'historic_' || CASE WHEN historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate') THEN historic ELSE NULL END,
            'military_'|| CASE WHEN military IN ('bunker') THEN military ELSE NULL END,
            'highway_'|| CASE WHEN highway IN ('bus_stop', 'elevator', 'traffic_signals') THEN highway ELSE NULL END,
            'power_' || power
          ) AS feature,
          CASE
            WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
            ELSE NULL
          END AS capacity,
          religion,
          tags->'denomination' AS denomination,
          tags->'compressed_air' AS compressed_air,
          tags->'car_wash' as car_wash,
          tags->'drinking_water' AS drinking_water,
          tags->'location' AS location,
          tags->'memorial' AS memorial,
          tags->'castle_type' AS castle_type,
          tags->'information' AS information,
          tags->'artwork_type' as artwork_type,
          tags->'icao' as icao,
          tags->'iata' as iata,
          "generator:source",
          tags->'supervised' as supervised,
          tags->'bicycle_parking' as bicycle_parking,
          tags->'vending' as vending,
          tags->'automated' as automated,
          CASE
            WHEN "natural" IN ('peak', 'volcano', 'saddle') THEN
              CASE
                WHEN ele ~ '^-?\d{1,4}(\.\d+)?$' THEN ele::NUMERIC
                ELSE NULL
              END
            WHEN "waterway" IN ('waterfall') THEN
              CASE
                WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
              ELSE NULL
              END
            WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
            ELSE NULL
          END AS score,
          CASE
            WHEN "natural" IN ('peak', 'volcano', 'saddle')
              OR tourism = 'alpine_hut' OR (tourism = 'information' AND tags->'information' = 'guidepost')
              OR amenity = 'shelter'
              THEN
              CASE
                WHEN ele ~ '^-?\d{1,4}(\.\d+)?$' THEN ele::NUMERIC
                ELSE NULL
              END
            ELSE NULL
          END AS elevation,
          CASE
            WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)) OR waterway IN ('waterfall') THEN
              CASE
                WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
              ELSE NULL
            END
            ELSE NULL
          END AS height,
          NULL AS way_pixels
        FROM planet_osm_point
        WHERE aeroway IN ('helipad', 'aerodrome')
          OR tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel',
              'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery')
          OR amenity IN ('atm', 'bank', 'bar', 'bench', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station',
                         'biergarten', 'cafe', 'car_wash', 'compressed_air', 'drinking_water', 'fast_food',
                         'ferry_terminal', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe',
                         'pharmacy', 'place_of_worship', 'police', 'post_office', 'post_box', 'pub', 'public_bath',
                         'restaurant', 'shelter', 'shower', 'toilets', 'water_point', 'cinema', 'theatre',
                         'bureau_de_change', 'casino', 'library')
          OR tags->'compressed_air'='yes'
          OR tags->'car_wash'='yes'
          OR (amenity='motorcycle_parking' AND (bicycle='yes' OR bicycle='designated'))
          OR (amenity='charging_station' AND (bicycle='yes' OR bicycle='designated'))
          OR (amenity='vending_machine' AND tags->'vending'='bicycle_tube')
          OR tags->'healthcare' IN ('clinic', 'hospital')
          OR shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry', 'sports')
          OR leisure='picnic_table'
          OR (
            man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo')
            AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)
          )
          OR man_made IN ('water_tap')
          OR man_made IN ('monitoring_station') AND tags->'monitoring:bicycle'='yes'
          OR "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance')
          OR waterway IN ('waterfall')
          OR historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate')
          OR military IN ('bunker')
          OR tags->'emergency'='phone'
          OR highway IN ('elevator', 'traffic_signals')
          OR ((highway='bus_stop' OR public_transport='platform') AND (tags->'shelter'='yes' OR covered='yes'))
          OR (power = 'generator' AND "generator:source"='wind')
          OR tags->'ford' IS NOT NULL
        ORDER BY
            CASE
                -- Bike amenities
                WHEN shop IN ('bicycle', 'sports') THEN 0
                WHEN amenity IN ('bicycle_rental') Then 10
                -- Emergency
                WHEN tags->'healthcare' IS NOT NULL OR tags->'emergency'='phone' OR amenity IN ('hospital', 'pharmacy') THEN 20
                -- Other emergency-related amenities
                WHEN amenity IN ('bicycle_repair_station', 'compressed_air', 'drinking_water', 'police', 'toilets',
                  'water_point', 'charging_station') THEN 21
                WHEN tags->'compressed_air'='yes' THEN 22
                --- Parkings
                WHEN amenity IN ('bicycle_parking', 'motorcycle_parking') THEN 32
                -- Supermarkets
                WHEN shop='supermarket' THEN 40
                -- Convenience
                WHEN shop='convenience' OR shop='convenience;gas' THEN 50
                -- Food
                WHEN shop IS NOT NULL OR amenity IN ('bar', 'biergarten', 'cafe', 'fast_food', 'food_court', 'pub', 'restaurant') THEN 60
                -- Everything else
                ELSE NULL
            END ASC NULLS LAST,
            feature,
            score DESC NULLS LAST
      ) AS data
  geometry: point
  properties:
    cache-features: true
    minzoom: 10
- id: area_label
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          COALESCE(
            landuse,
            leisure,
            boundary,
            "natural",
            amenity,
            CASE WHEN man_made IN ('works', 'wastewater_plant', 'water_works') THEN 'industrial' ELSE NULL END
          ) AS type,
          name,
          way_area AS area,
          way
        FROM planet_osm_polygon
        WHERE name IS NOT NULL AND
          (landuse IN ('basin', 'cemetery', 'commercial', 'farmyard', 'forest', 'grass', 'industrial', 'military')
            OR COALESCE(leisure, "natural") IS NOT NULL
            OR amenity IN ('embassy', 'library', 'townhall', 'university')
            OR man_made IN ('works', 'wastewater_plant', 'water_works')
            OR boundary IN ('aboriginal_lands', 'national_park')
            OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99')))
          AND way && !bbox!
      ) AS data
  geometry: point
  properties:
    minzoom: 10
- id: waterway_label
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT way, waterway AS type, name
        FROM planet_osm_line
        WHERE
          waterway IN ('canal', 'river', 'stream')
          AND name IS NOT NULL
            AND (tunnel IS NULL OR tunnel = 'no')
      ) AS data
  geometry: linestring
  properties:
    minzoom: 13
- id: barriers
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT barrier, way, z_order
        FROM planet_osm_point
        WHERE barrier IN ('block', 'bollard', 'cattle_grid', 'chain', 'cycle_barrier', 'gate', 'jersey_barrier', 'kissing_gate', 'lift_gate', 'log', 'stile', 'swing_gate', 'turnstile')
        ORDER BY z_order NULLS LAST
      ) AS data
  geometry: point
  properties:
    minzoom: 17
- id: amenities-poly-text
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          feature,
          access,
          capacity,
          name,
          score,
          height,
          information,
          way_pixels
        FROM
        (
          SELECT
            access,
            bicycle,
            tags->'mtb' AS mtb,
            covered,
            tags->'shelter' AS shelter,
            way,
            name,
            COALESCE( -- order is important here
              'aeroway_' || CASE WHEN aeroway IN ('helipad', 'aerodrome') THEN aeroway ELSE NULL END,
              'tourism_' || CASE WHEN tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel', 'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery') THEN tourism ELSE NULL END,
              'amenity_' || CASE WHEN amenity IN ('atm', 'bank', 'bar', 'bench', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station', 'biergarten', 'cafe', 'car_wash', 'compressed_air', 'drinking_water', 'fast_food', 'ferry_terminal', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe', 'pharmacy', 'place_of_worship', 'police', 'post_office', 'post_box', 'pub', 'public_bath', 'restaurant', 'shelter', 'shower', 'toilets', 'water_point', 'cinema', 'theatre', 'bureau_de_change', 'casino', 'library', 'motorcycle_parking', 'charging_station', 'vending_machine') THEN amenity ELSE NULL END,
              'shop_' || CASE WHEN tags->'service:bicycle:retail'='yes' OR tags->'service:bicycle:repair'='yes' OR tags->'service:bicycle:rental'='yes' OR tags->'service:bicycle:pump'='yes' OR tags->'service:bicycle:diy'='yes' THEN 'bicycle' ELSE CASE WHEN shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry', 'sports') THEN shop ELSE NULL END END,
              'emergency_' || CASE WHEN tags->'emergency' IS NOT NULL then tags->'emergency' ELSE NULL END,
              'healthcare_' || CASE WHEN tags->'healthcare' IN ('clinic', 'hospital') THEN tags->'healthcare' ELSE NULL END,
              'leisure_' || CASE WHEN leisure='picnic_table' THEN leisure ELSE NULL END,
              'man_made_' || CASE WHEN man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo', 'water_tap', 'monitoring_station') THEN man_made ELSE NULL END,
              'natural_' || CASE WHEN "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance') THEN "natural" ELSE NULL END,
              'waterway_' || CASE WHEN waterway IN ('waterfall') THEN waterway ELSE NULL END,
              'historic_' || CASE WHEN historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate') THEN historic ELSE NULL END,
              'military_'|| CASE WHEN military IN ('bunker') THEN military ELSE NULL END,
              'highway_'|| CASE WHEN highway IN ('bus_stop', 'elevator', 'traffic_signals') THEN highway ELSE NULL END,
              'power_' || power
            ) AS feature,
            CASE
              WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
              ELSE NULL
            END AS capacity,
            religion,
            tags->'denomination' AS denomination,
            tags->'compressed_air' AS compressed_air,
            tags->'car_wash' as car_wash,
            tags->'drinking_water' AS drinking_water,
            tags->'location' AS location,
            tags->'memorial' AS memorial,
            tags->'castle_type' AS castle_type,
            tags->'information' AS information,
            tags->'artwork_type' as artwork_type,
            tags->'icao' as icao,
            tags->'iata' as iata,
            "generator:source",
            tags->'supervised' as supervised,
            tags->'bicycle_parking' as bicycle_parking,
            tags->'vending' as vending,
            tags->'automated' as automated,
            CASE
              WHEN "natural" IN ('peak', 'volcano', 'saddle') THEN NULL
              WHEN "waterway" IN ('waterfall') THEN
                CASE
                  WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
                ELSE NULL
                END
              WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
              ELSE NULL
            END AS score,
            NULL AS elevation,
            CASE
              WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)) OR waterway IN ('waterfall') THEN
                CASE
                  WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
                ELSE NULL
              END
              ELSE NULL
            END AS height,
            way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels
          FROM planet_osm_polygon
          WHERE aeroway IN ('helipad', 'aerodrome')
            OR tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel',
                'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery')
            OR amenity IN ('atm', 'bank', 'bar', 'bench', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station',
                           'biergarten', 'cafe', 'car_wash', 'compressed_air', 'drinking_water', 'fast_food',
                           'ferry_terminal', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe',
                           'pharmacy', 'place_of_worship', 'police', 'post_office', 'post_box', 'pub', 'public_bath',
                           'restaurant', 'shelter', 'shower', 'toilets', 'water_point', 'cinema', 'theatre',
                           'bureau_de_change', 'casino', 'library')
            OR tags->'compressed_air'='yes'
            OR tags->'car_wash'='yes'
            OR (amenity='motorcycle_parking' AND (bicycle='yes' OR bicycle='designated'))
            OR (amenity='charging_station' AND (bicycle='yes' OR bicycle='designated'))
            OR (amenity='vending_machine' AND tags->'vending'='bicycle_tube')
            OR shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry', 'sports')
            OR tags->'healthcare' IN ('clinic', 'hospital')
            OR leisure='picnic_table'
            OR (
              man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo')
              AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)
            )
            OR man_made IN ('water_tap')
            OR man_made IN ('monitoring_station') AND tags->'monitoring:bicycle'='yes'
            OR "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance')
            OR waterway IN ('waterfall')
            OR historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate')
            OR military IN ('bunker')
            OR tags->'emergency'='phone'
            OR highway IN ('elevator', 'traffic_signals')
            OR ((highway='bus_stop' OR public_transport='platform') AND (tags->'shelter'='yes' OR covered='yes'))
            OR (power = 'generator' AND "generator:source"='wind')
          ORDER BY
            CASE
                -- Bike amenities
                WHEN shop IN ('bicycle', 'sports') THEN 0
                WHEN amenity IN ('bicycle_rental') Then 10
                -- Emergency
                WHEN tags->'healthcare' IS NOT NULL OR tags->'emergency'='phone' OR amenity IN ('hospital', 'pharmacy') THEN 20
                -- Other emergency-related amenities
                WHEN amenity IN ('bicycle_repair_station', 'compressed_air', 'drinking_water', 'police', 'toilets',
                  'water_point', 'charging_station') THEN 21
                WHEN tags->'compressed_air'='yes' THEN 22
                --- Parkings
                WHEN amenity IN ('bicycle_parking', 'motorcycle_parking') THEN 32
                -- Supermarkets
                WHEN shop='supermarket' THEN 40
                -- Convenience
                WHEN shop='convenience' OR shop='convenience;gas' THEN 50
                -- Food
                WHEN shop IS NOT NULL OR amenity IN ('bar', 'biergarten', 'cafe', 'fast_food', 'food_court', 'pub', 'restaurant') THEN 60
                -- Everything else
                ELSE NULL
            END ASC NULLS LAST,
            feature,
            score DESC NULLS LAST
        ) AS p
      ) AS data
  geometry: polygon
  properties:
    minzoom: 14
- id: amenities-points-text
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          feature,
          access,
          capacity,
          CONCAT(
              name,
              CASE WHEN name IS NOT NULL AND elevation IS NOT NULL THEN E'\n' ELSE NULL END,
              CASE WHEN elevation IS NOT NULL THEN CONCAT(REPLACE(ROUND(elevation)::TEXT, '-', U&'\2212'), U&'\00A0', 'm') ELSE NULL END
          ) AS name,
          score,
          height,
          information,
          way_pixels
        FROM
        (
          SELECT
            access,
            bicycle,
            tags->'mtb' AS mtb,
            covered,
            tags->'shelter' AS shelter,
            way,
            name,
            COALESCE( -- order is important here
              'aeroway_' || CASE WHEN aeroway IN ('helipad', 'aerodrome') THEN aeroway ELSE NULL END,
              'tourism_' || CASE WHEN tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel', 'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery') THEN tourism ELSE NULL END,
              'amenity_' || CASE WHEN amenity IN ('atm', 'bank', 'bar', 'bench', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station', 'biergarten', 'cafe', 'car_wash', 'compressed_air', 'drinking_water', 'fast_food', 'ferry_terminal', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe', 'pharmacy', 'place_of_worship', 'police', 'post_office', 'post_box', 'pub', 'public_bath', 'restaurant', 'shelter', 'shower', 'toilets', 'water_point', 'cinema', 'theatre', 'bureau_de_change', 'casino', 'library', 'motorcycle_parking', 'charging_station', 'vending_machine') THEN amenity ELSE NULL END,
              'shop_' || CASE WHEN tags->'service:bicycle:retail'='yes' OR tags->'service:bicycle:repair'='yes' OR tags->'service:bicycle:rental'='yes' OR tags->'service:bicycle:pump'='yes' OR tags->'service:bicycle:diy'='yes' THEN 'bicycle' ELSE CASE WHEN shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry', 'sports') THEN shop ELSE NULL END END,
              'emergency_' || CASE WHEN tags->'emergency' IS NOT NULL then tags->'emergency' ELSE NULL END,
              'healthcare_' || CASE WHEN tags->'healthcare' IN ('clinic', 'hospital') THEN tags->'healthcare' ELSE NULL END,
              'leisure_' || CASE WHEN leisure='picnic_table' THEN leisure ELSE NULL END,
              'man_made_' || CASE WHEN man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo', 'water_tap', 'monitoring_station') THEN man_made ELSE NULL END,
              'natural_' || CASE WHEN "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance') THEN "natural" ELSE NULL END,
              'waterway_' || CASE WHEN waterway IN ('waterfall') THEN waterway ELSE NULL END,
              'historic_' || CASE WHEN historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate') THEN historic ELSE NULL END,
              'military_'|| CASE WHEN military IN ('bunker') THEN military ELSE NULL END,
              'highway_'|| CASE WHEN highway IN ('bus_stop', 'elevator', 'traffic_signals') THEN highway ELSE NULL END,
              'power_' || power
            ) AS feature,
            CASE
              WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
              ELSE NULL
            END AS capacity,
            religion,
            tags->'denomination' AS denomination,
            tags->'compressed_air' AS compressed_air,
            tags->'car_wash' as car_wash,
            tags->'drinking_water' AS drinking_water,
            tags->'location' AS location,
            tags->'memorial' AS memorial,
            tags->'castle_type' AS castle_type,
            tags->'information' AS information,
            tags->'artwork_type' as artwork_type,
            tags->'icao' as icao,
            tags->'iata' as iata,
            "generator:source",
            tags->'supervised' as supervised,
            tags->'bicycle_parking' as bicycle_parking,
            tags->'vending' as vending,
            tags->'automated' as automated,
            CASE
              WHEN "natural" IN ('peak', 'volcano', 'saddle') THEN
                CASE
                  WHEN ele ~ '^-?\d{1,4}(\.\d+)?$' THEN ele::NUMERIC
                  ELSE NULL
                END
              WHEN "waterway" IN ('waterfall') THEN
                CASE
                  WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
                ELSE NULL
                END
              WHEN tags->'capacity'~E'^\\d+$' THEN (tags->'capacity')::integer
              ELSE NULL
            END AS score,
            CASE
              WHEN "natural" IN ('peak', 'volcano', 'saddle')
                OR tourism = 'alpine_hut' OR (tourism = 'information' AND tags->'information' = 'guidepost')
                OR amenity = 'shelter'
                THEN
                CASE
                  WHEN ele ~ '^-?\d{1,4}(\.\d+)?$' THEN ele::NUMERIC
                  ELSE NULL
                END
              ELSE NULL
            END AS elevation,
            CASE
              WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)) OR waterway IN ('waterfall') THEN
                CASE
                  WHEN tags->'height' ~ '^\d{1,3}(\.\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\d{1,3}(\.\d+)?)( m)?$'))::NUMERIC
                ELSE NULL
              END
              ELSE NULL
            END AS height,
            NULL AS way_pixels
          FROM planet_osm_point
          WHERE aeroway IN ('helipad', 'aerodrome')
            OR tourism IN ('artwork', 'alpine_hut', 'camp_site', 'caravan_site', 'chalet', 'wilderness_hut', 'guest_house', 'apartment', 'hostel',
                'hotel', 'motel', 'information', 'museum', 'viewpoint', 'picnic_site', 'gallery')
            OR amenity IN ('atm', 'bank', 'bar', 'bench', 'bicycle_rental', 'bicycle_parking', 'bicycle_repair_station',
                           'biergarten', 'cafe', 'car_wash', 'compressed_air', 'drinking_water', 'fast_food',
                           'ferry_terminal', 'food_court', 'fountain', 'hospital', 'ice_cream', 'internet_cafe',
                           'pharmacy', 'place_of_worship', 'police', 'post_office', 'post_box', 'pub', 'public_bath',
                           'restaurant', 'shelter', 'shower', 'toilets', 'water_point', 'cinema', 'theatre',
                           'bureau_de_change', 'casino', 'library')
            OR tags->'compressed_air'='yes'
            OR tags->'car_wash'='yes'
            OR (amenity='motorcycle_parking' AND (bicycle='yes' OR bicycle='designated'))
            OR (amenity='charging_station' AND (bicycle='yes' OR bicycle='designated'))
            OR (amenity='vending_machine' AND tags->'vending'='bicycle_tube')
            OR shop IN ('bicycle', 'bakery', 'beverage', 'convenience', 'convenience;gas', 'greengrocer', 'supermarket', 'pastry', 'sports')
            OR tags->'healthcare' IN ('clinic', 'hospital')
            OR leisure='picnic_table'
            OR (
              man_made IN ('mast', 'tower', 'water_tower', 'lighthouse', 'windmill', 'cross', 'obelisk', 'communications_tower', 'telescope', 'chimney', 'crane', 'storage_tank', 'silo')
              AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL)
            )
            OR man_made IN ('water_tap')
            OR man_made IN ('monitoring_station') AND tags->'monitoring:bicycle'='yes'
            OR "natural" IN ('peak', 'volcano', 'saddle', 'spring', 'cave_entrance')
            OR waterway IN ('waterfall')
            OR historic IN ('memorial', 'monument', 'archaeological_site', 'wayside_cross', 'fort', 'wayside_shrine', 'castle', 'manor', 'city_gate')
            OR military IN ('bunker')
            OR tags->'emergency'='phone'
            OR highway IN ('elevator', 'traffic_signals')
            OR ((highway='bus_stop' OR public_transport='platform') AND (tags->'shelter'='yes' OR covered='yes'))
            OR (power = 'generator' AND "generator:source"='wind')
            OR tags->'ford' IS NOT NULL
          ORDER BY
            CASE
                -- Bike amenities
                WHEN shop IN ('bicycle', 'sports') THEN 0
                WHEN amenity IN ('bicycle_rental') Then 10
                -- Emergency
                WHEN tags->'healthcare' IS NOT NULL OR tags->'emergency'='phone' OR amenity IN ('hospital', 'pharmacy') THEN 20
                -- Other emergency-related amenities
                WHEN amenity IN ('bicycle_repair_station', 'compressed_air', 'drinking_water', 'police', 'toilets',
                  'water_point', 'charging_station') THEN 21
                WHEN tags->'compressed_air'='yes' THEN 22
                --- Parkings
                WHEN amenity IN ('bicycle_parking', 'motorcycle_parking') THEN 32
                -- Supermarkets
                WHEN shop='supermarket' THEN 40
                -- Convenience
                WHEN shop='convenience' OR shop='convenience;gas' THEN 50
                -- Food
                WHEN shop IS NOT NULL OR amenity IN ('bar', 'biergarten', 'cafe', 'fast_food', 'food_court', 'pub', 'restaurant') THEN 60
                -- Everything else
                ELSE NULL
            END ASC NULLS LAST,
            feature,
            score DESC NULLS LAST
        ) AS p
      ) AS data
  geometry: point
  properties:
    minzoom: 14
- id: power-towers
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (SELECT
          way,
          power
      FROM planet_osm_point
      WHERE power IN ('tower', 'pole')
      ORDER BY
        CASE
          WHEN power = 'tower' THEN 1
          WHEN power = 'pole' THEN 2
          ELSE NULL
        END
      ) AS power_towers
  properties:
    minzoom: 14
- id: highway_area_label
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT highway AS type, name, way_area AS area, ST_PointOnSurface(way) AS way
        FROM planet_osm_polygon
        WHERE name IS NOT NULL AND highway IS NOT NULL
          AND way && !bbox!
      ) AS data
  geometry: point
  properties:
    minzoom: 10
- id: roads-text-ref-low-zoom
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          highway,
          height,
          width,
          refs
        FROM (
          SELECT
            way,
            osm_id,
            highway,
            array_length(refs,1) AS height,
            (SELECT MAX(char_length(ref)) FROM unnest(refs) AS u(ref)) AS width,
            array_to_string(refs, E'\n') AS refs
          FROM (
            SELECT
              way,
              osm_id,
              highway,
              string_to_array(ref, ';') AS refs
            FROM planet_osm_roads
            WHERE highway IN ('motorway', 'trunk', 'primary', 'secondary')
              AND ref IS NOT NULL
          ) AS p
        ) AS q
        WHERE height <= 4 AND width <= 11
        ORDER BY
        CASE
          WHEN highway = 'motorway' THEN 38
          WHEN highway = 'trunk' THEN 37
          WHEN highway = 'primary' THEN 36
          WHEN highway = 'secondary' THEN 35
          WHEN highway = 'tertiary' THEN 34
          WHEN highway = 'unclassified' THEN 33
          WHEN highway = 'residential' THEN 32
          WHEN highway = 'runway' THEN 6
          WHEN highway = 'taxiway' THEN 5
          ELSE NULL
        END DESC NULLS LAST,
        height DESC,
        width DESC,
        refs,
        osm_id
      ) AS data
  properties:
    minzoom: 10
    maxzoom: 12
- id: roads-text-ref
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          highway,
          height,
          width,
          refs
        FROM (
          SELECT
            osm_id,
            way,
            highway,
            array_length(refs,1) AS height,
            (SELECT MAX(char_length(ref)) FROM unnest(refs) AS u(ref)) AS width,
            array_to_string(refs, E'\n') AS refs
          FROM (
            SELECT
              osm_id,
              way,
              COALESCE(
                CASE WHEN highway IN ('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential', 'track') THEN highway ELSE NULL END,
                CASE WHEN aeroway IN ('runway', 'taxiway') THEN aeroway ELSE NULL END
              ) AS highway,
              string_to_array(ref, ';') AS refs
            FROM planet_osm_line
            WHERE (highway IN ('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential', 'track') OR aeroway IN ('runway', 'taxiway'))
              AND ref IS NOT NULL
        ) AS p
      ) AS q
      WHERE height <= 4 AND width <= 11
      ORDER BY
        CASE
          WHEN highway = 'motorway' THEN 38
          WHEN highway = 'trunk' THEN 37
          WHEN highway = 'primary' THEN 36
          WHEN highway = 'secondary' THEN 35
          WHEN highway = 'tertiary' THEN 34
          WHEN highway = 'unclassified' THEN 33
          WHEN highway = 'residential' THEN 32
          WHEN highway = 'track' THEN 30
          WHEN highway = 'runway' THEN 6
          WHEN highway = 'taxiway' THEN 5
          ELSE NULL
        END DESC NULLS LAST,
        height DESC,
        width DESC,
        refs,
        osm_id
      ) AS data
  properties:
    minzoom: 13
- id: roads-text-name
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          CASE
            WHEN substr(highway, length(highway)-4, 5) = '_link' THEN substr(highway, 0, length(highway)-4)
            ELSE highway
          END AS highway,
          CASE WHEN (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes') THEN 'yes' ELSE 'no' END AS tunnel,
          name,
          CASE
            WHEN oneway IN ('yes', '-1') THEN oneway
            WHEN junction IN ('roundabout') AND (oneway IS NULL OR NOT oneway IN ('no', 'reversible')) THEN 'yes'
            ELSE 'no'
          END AS oneway,
          CASE
            WHEN tags->'oneway:bicycle' IS NOT NULL THEN tags->'oneway:bicycle'
            WHEN highway='cycleway' AND oneway IS NOT NULL THEN oneway
            WHEN tags->'cycleway' IN ('opposite', 'opposite_lane', 'opposite_track', 'opposite_share_busway')
              OR tags->'cycleway:both' IN ('opposite', 'opposite_lane', 'opposite_track', 'opposite_share_busway')
              OR tags->'cycleway:left' IN ('opposite', 'opposite_lane', 'opposite_track', 'opposite_share_busway')
              OR tags->'cycleway:right' IN ('opposite', 'opposite_lane', 'opposite_track', 'opposite_share_busway')
            THEN 'no'
            ELSE NULL
          END AS oneway_bicycle,
          horse, bicycle
        FROM planet_osm_line l
        JOIN (VALUES -- this join is also putting a condition on what is selected. features not matching it do not make it into the results.
          ('motorway', 380),
          ('trunk', 370),
          ('primary', 360),
          ('secondary', 350),
          ('tertiary', 340),
          ('residential', 330),
          ('unclassified', 330),
          ('road', 330),
          ('living_street', 320),
          ('pedestrian', 310),
          ('motorway_link', 240),
          ('trunk_link', 230),
          ('primary_link', 220),
          ('secondary_link', 210),
          ('tertiary_link', 200),
          ('service', 150)
        ) AS ordertable (highway, prio)
        USING (highway)
        WHERE highway IN ('motorway', 'motorway_link', 'trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary',
          'tertiary_link', 'residential', 'unclassified', 'road', 'service', 'pedestrian', 'living_street')
        AND (
          name IS NOT NULL
          OR oneway IN ('yes', '-1')
          OR tags->'oneway:bicycle' IN ('yes', '-1')
          OR junction IN ('roundabout')
        )
        ORDER BY
          z_order DESC, -- put important roads first
          CASE WHEN layer~E'^\\d+$' THEN layer::integer ELSE 0 END, -- put top layered roads first
          length(name) DESC, -- Try to fit big labels in first
          name DESC, -- Force a consistent ordering between differently named streets
          l.osm_id DESC -- Force an ordering for streets of the same name, e.g. dualized roads
      ) AS data
  properties:
    cache-features: true
    minzoom: 13
- id: paths-text-name
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          highway,
          name,
          CASE
            WHEN oneway IN ('yes', '-1') THEN oneway
            ELSE 'no'
          END AS oneway,
          CASE
            WHEN tags->'oneway:bicycle' IS NOT NULL THEN tags->'oneway:bicycle'
            WHEN oneway IS NOT NULL THEN oneway
            ELSE 'no'
          END AS oneway_bicycle
        FROM planet_osm_line
        WHERE highway IN ('bridleway', 'footway', 'cycleway', 'path', 'track', 'steps')
      ) AS data
  properties:
    minzoom: 15
- id: roads-text-conditional
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          highway,
          tags->'motor_vehicle:conditional' AS motor_vehicle_conditional,
          tags->'vehicle:conditional' AS vehicle_conditional,
          tags->'access:conditional' AS access_conditional,
          tags->'bicycle:conditional' AS bicycle_conditional
        FROM planet_osm_line
        WHERE highway IS NOT NULL AND (
          tags->'motor_vehicle:conditional' IS NOT NULL
          OR tags->'vehicle:conditional' IS NOT NULL
          OR tags->'access:conditional' IS NOT NULL
          OR tags->'bicycle:conditional' IS NOT NULL
        )
      ) AS data
  properties:
    minzoom: 20
- id: addresses
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          "addr:housenumber" AS addr_housenumber,
          "addr:housename" AS addr_housename,
          tags->'addr:unit' AS addr_unit,
          way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels
        FROM planet_osm_polygon
        WHERE way && !bbox! AND (
          ("addr:housenumber" IS NOT NULL)
          OR ("addr:housename" IS NOT NULL)
          OR (tags->'addr:unit' IS NOT NULL)
        )
        AND building IS NOT NULL
      UNION ALL
        SELECT
          way,
          "addr:housenumber" AS addr_housenumber,
          "addr:housename" AS addr_housename,
          tags->'addr:unit' AS addr_unit,
          NULL AS way_pixels
        FROM planet_osm_point
        WHERE way && !bbox! AND (
          ("addr:housenumber" IS NOT NULL)
          OR ("addr:housename" IS NOT NULL)
          OR (tags->'addr:unit' IS NOT NULL)
        )
        ORDER BY way_pixels DESC NULLS LAST
      ) AS addresses
  properties:
    cache-features: true
    minzoom: 18
- id: military-overlay
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          landuse,
          military,
          way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels
        FROM planet_osm_polygon
        WHERE
          (landuse = 'military' OR military = 'danger_area')
          AND building IS NULL
          AND way_area > 1*!pixel_width!::real*!pixel_height!::real
        ORDER BY way_area DESC
      ) AS data
  geometry: polygon
  properties:
    minzoom: 7
- id: legend-icons
  class: legend
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          tags->'icon' AS icon,
          tags->'label' AS label
        FROM planet_osm_point
        WHERE tags->'icon' IS NOT NULL
      ) AS data
  geometry: point
  properties:
    status: off
- id: legend-labels
  class: legend
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          tags->'label' AS label
        FROM planet_osm_point
        WHERE tags->'label' IS NOT NULL AND tags->'icon' IS NULL
      ) AS data
  geometry: point
  properties:
    status: off
